{
  "AWSTemplateFormatVersion": "2010-09-09",
  "Parameters": {
    "CodeRepository": {
      "Type": "String",
      "Default": "ecog2-coderepository",
      "Description": "S3 bucket that contains the application code.  Must be in same region as environment."
    },
    "DevDayStartHour": {
      "Type": "String",
      "Default": "12",
      "AllowedValues": [
        "0", "1", "2", "3", "4", "5", 
        "6", "7", "8", "9", "10", "11", 
        "12", "13", "14", "15", "16", "17", 
        "18", "19", "20", "21", "22", "23"
      ],
      "Description": "Hour when developer day starts (in UTC) [0-23]."
    },
    "DevDayStopHour": {
      "Type": "String",
      "Default": "23",
      "AllowedValues": [
        "0", "1", "2", "3", "4", "5", 
        "6", "7", "8", "9", "10", "11", 
        "12", "13", "14", "15", "16", "17", 
        "18", "19", "20", "21", "22", "23"
      ],
      "Description": "Hour when developer day ends (in UTC) [0-23]."
    },
    "DevWeekStart": {
      "Type": "String",
      "Default": "MON",
      "AllowedValues": [
        "MON",
        "TUE",
        "WED",
        "THU",
        "FRI",
        "SAT",
        "SUN"
      ],
      "Description": "First work day of week for developers."
    },
    "DevWeekEnd": {
      "Type": "String",
      "Default": "FRI",
      "AllowedValues": [
        "MON",
        "TUE",
        "WED",
        "THU",
        "FRI",
        "SAT",
        "SUN"
      ],
      "Description": "Last work day of week for developers."
    },
    "BizDayStartHour": {
      "Type": "String",
      "Default": "13",
      "AllowedValues": [
        "0", "1", "2", "3", "4", "5", 
        "6", "7", "8", "9", "10", "11", 
        "12", "13", "14", "15", "16", "17", 
        "18", "19", "20", "21", "22", "23"
      ],
      "Description": "Hour when business day starts (in UTC) [0-23]."
    },
    "BizDayStopHour": {
      "Type": "String",
      "Default": "23",
      "AllowedValues": [
        "0", "1", "2", "3", "4", "5", 
        "6", "7", "8", "9", "10", "11", 
        "12", "13", "14", "15", "16", "17", 
        "18", "19", "20", "21", "22", "23"
      ],
      "Description": "Hour when business day ends (in UTC) [0-23]."
    },
    "BizWeekStart": {
      "Type": "String",
      "Default": "MON",
      "AllowedValues": [
        "MON",
        "TUE",
        "WED",
        "THU",
        "FRI",
        "SAT",
        "SUN"
      ],
      "Description": "First work day of week for business."
    },
    "BizWeekEnd": {
      "Type": "String",
      "Default": "FRI",
      "AllowedValues": [
        "MON",
        "TUE",
        "WED",
        "THU",
        "FRI",
        "SAT",
        "SUN"
      ],
      "Description": "Last work day of week for business."
    }
  },
  "Metadata" : {
    "AWS::CloudFormation::Interface" : {
      "ParameterGroups" : [
        {
          "Label" : { "default" : "Code Location" },
          "Parameters" : [ "CodeRepository" ]
        },
        {
          "Label" : { "default":"Developer Schedule Configuration (Controls Start/Stop for DEV_WEEK tagged instances)" },
          "Parameters" : [ 
            "DevWeekStart", 
            "DevWeekEnd",           
            "DevDayStartHour", 
            "DevDayStopHour" ]
        },
        {
          "Label" : { "default":"Business Schedule Configuration (Controls Start/Stop for BIZ_WEEK tagged instances)" },
          "Parameters" : [ 
            "BizWeekStart", 
            "BizWeekEnd",           
            "BizDayStartHour", 
            "BizDayStopHour" ]
        }
      ],
      "ParameterLabels" : {
        "DevWeekStart" : { "default" : "Which day is the start of the deveoper's work week?" },
        "DevWeekEnd" : { "default" : "Which day is the end of the deveoper's work week?" },
        "DevDayStartHour" : { "default" : "What hour do you want to start your developer instances?" },
        "DevDayStopHour" : { "default" : "What hour do you want to stop your developer instances?" },
        "BizWeekStart" : { "default" : "Which day is the start of the business week?" },
        "BizWeekEnd" : { "default" : "Which day is the end of the business week?" },
        "BizDayStartHour" : { "default" : "What hour do you want to start your business instances?" },
        "BizDayStopHour" : { "default" : "What hour do you want to stop your business instances?" }
      }
    }
  },
  "Resources": {
    "LambdaEC2Role": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Version": "2012-10-17",
          "Statement": [
            {
              "Effect": "Allow",
              "Principal": {
                "Service": [
                  "lambda.amazonaws.com"
                ]
              },
              "Action": [
                "sts:AssumeRole"
              ]
            }
          ]
        },
        "ManagedPolicyArns": [
          "arn:aws:iam::aws:policy/AmazonEC2FullAccess",
          "arn:aws:iam::aws:policy/CloudWatchLogsFullAccess"
        ],
        "RoleName": "LambdaEC2Role"
      }
    },
    "EC2StarterLambda": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "Code": {
          "S3Bucket": { "Ref": "CodeRepository" },
          "S3Key": "EC2-Starter-Lambda.zip"
        },
        "Description": "Lambda function to start EC2 Instances.",
        "FunctionName": "EC2-Starter-Lambda",
        "Handler": "EC2-Starter-Lambda.lambda_handler",
        "Role": {
          "Fn::GetAtt": [
            "LambdaEC2Role",
            "Arn"
          ]
        },
        "Runtime": "python2.7",
        "Timeout": "300"
      }
    },
    "EC2StopperLambda": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "Code": {
          "S3Bucket": { "Ref": "CodeRepository" },
          "S3Key": "EC2-Stopper-Lambda.zip"
        },
        "Description": "Lambda function to stop EC2 Instances.",
        "FunctionName": "EC2-Stopper-Lambda",
        "Handler": "EC2-Stopper-Lambda.lambda_handler",
        "Role": {
          "Fn::GetAtt": [
            "LambdaEC2Role",
            "Arn"
          ]
        },
        "Runtime": "python2.7",
        "Timeout": "300"
      }
    },
    "DevWeekStartScheduledRule": {
      "Type": "AWS::Events::Rule",
      "Properties": {
        "Name": "DEV_WEEK-start",
        "Description": "Start instances with OP_MODE of DEV_WEEK.",
        "ScheduleExpression": {
          "Fn::Join": [
            "", 
            [ 
              "cron(0 ",
              { "Ref" : "DevDayStartHour" },
              " ? * ",
              { "Ref" : "DevWeekStart" },
              "-",
              { "Ref" : "DevWeekEnd" },
              " *)"
            ]
          ]
        },
        "State": "ENABLED",
        "Targets": [{
          "Arn": { "Fn::GetAtt": ["EC2StarterLambda", "Arn"] },
          "Id": "DEV_WEEK-EC2-Starter",
          "Input": "{ \"OpMode\" : \"DEV_WEEK\" }"
        }]
      }
    },
    "PermissionForEventsToInvokeDevStarter": {
      "Type": "AWS::Lambda::Permission",
      "Properties": {
        "FunctionName": { "Ref": "EC2StarterLambda" },
        "Action": "lambda:InvokeFunction",
        "Principal": "events.amazonaws.com",
        "SourceArn": { "Fn::GetAtt": ["DevWeekStartScheduledRule", "Arn"] }
      }
    },
    "DevWeekStopScheduledRule": {
      "Type": "AWS::Events::Rule",
      "Properties": {
        "Name": "DEV_WEEK-stop",
        "Description": "Stop instances with OP_MODE of DEV_WEEK.",
        "ScheduleExpression": {
          "Fn::Join": [
            "", 
            [ 
              "cron(0 ",
              { "Ref" : "DevDayStopHour" },
              " ? * ",
              { "Ref" : "DevWeekStart" },
              "-",
              { "Ref" : "DevWeekEnd" },
              " *)"
            ]
          ]
        },
        "State": "ENABLED",
        "Targets": [{
          "Arn": { "Fn::GetAtt": ["EC2StopperLambda", "Arn"] },
          "Id": "DEV_WEEK-EC2-Stopper",
          "Input": "{ \"OpMode\" : \"DEV_WEEK\" }"
        }]
      }
    },
    "PermissionForEventsToInvokeDevStopper": {
      "Type": "AWS::Lambda::Permission",
      "Properties": {
        "FunctionName": { "Ref": "EC2StopperLambda" },
        "Action": "lambda:InvokeFunction",
        "Principal": "events.amazonaws.com",
        "SourceArn": { "Fn::GetAtt": ["DevWeekStopScheduledRule", "Arn"] }
      }
    },
    "BizWeekStartScheduledRule": {
      "Type": "AWS::Events::Rule",
      "Properties": {
        "Name": "BIZ_WEEK-start",
        "Description": "Start instances with OP_MODE of BIZ_WEEK.",
        "ScheduleExpression": {
          "Fn::Join": [
            "", 
            [ 
              "cron(0 ",
              { "Ref" : "BizDayStartHour" },
              " ? * ",
              { "Ref" : "BizWeekStart" },
              "-",
              { "Ref" : "BizWeekEnd" },
              " *)"
            ]
          ]
        },
        "State": "ENABLED",
        "Targets": [{
          "Arn": { "Fn::GetAtt": ["EC2StarterLambda", "Arn"] },
          "Id": "BIZ_WEEK-EC2-Starter",
          "Input": "{ \"OpMode\" : \"BIZ_WEEK\" }"
        }]
      }
    },
    "PermissionForEventsToInvokeBizStarter": {
      "Type": "AWS::Lambda::Permission",
      "Properties": {
        "FunctionName": { "Ref": "EC2StarterLambda" },
        "Action": "lambda:InvokeFunction",
        "Principal": "events.amazonaws.com",
        "SourceArn": { "Fn::GetAtt": ["BizWeekStartScheduledRule", "Arn"] }
      }
    },
    "BizWeekStopScheduledRule": {
      "Type": "AWS::Events::Rule",
      "Properties": {
        "Name": "BIZ_WEEK-stop",
        "Description": "Stop instances with OP_MODE of BIZ_WEEK.",
        "ScheduleExpression": {
          "Fn::Join": [
            "", 
            [ 
              "cron(0 ",
              { "Ref" : "BizDayStopHour" },
              " ? * ",
              { "Ref" : "BizWeekStart" },
              "-",
              { "Ref" : "BizWeekEnd" },
              " *)"
            ]
          ]
        },
        "State": "ENABLED",
        "Targets": [{
          "Arn": { "Fn::GetAtt": ["EC2StopperLambda", "Arn"] },
          "Id": "BIZ_WEEK-EC2-Stopper",
          "Input": "{ \"OpMode\" : \"BIZ_WEEK\" }"
        }]
      }
    },
    "PermissionForEventsToInvokeBizStopper": {
      "Type": "AWS::Lambda::Permission",
      "Properties": {
        "FunctionName": { "Ref": "EC2StopperLambda" },
        "Action": "lambda:InvokeFunction",
        "Principal": "events.amazonaws.com",
        "SourceArn": { "Fn::GetAtt": ["BizWeekStopScheduledRule", "Arn"] }
      }
    }
  }
}